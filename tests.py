from copy import deepcopy

from solver import Solver
from validator import Validator

sudoku = [["5", "3", ".", ".", "7", ".", ".", ".", "."],
          ["6", ".", ".", "1", "9", "5", ".", ".", "."],
          [".", "9", "8", ".", ".", ".", ".", "6", "."],
          ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
          ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
          ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
          [".", "6", ".", ".", ".", ".", "2", "8", "."],
          [".", ".", ".", "4", "1", "9", ".", ".", "5"],
          [".", ".", ".", ".", "8", ".", ".", "7", "9"]]


def test_validator_success_1():
    assert Validator(sudoku).is_valid() is True


def test_validator_fail_1():
    sudoku_ = deepcopy(sudoku)
    sudoku_[0][0] = "8"
    assert Validator(sudoku_).is_valid() is False


def test_sudoku_solver_1():
    validator_ = Validator
    solver = Solver(sudoku, validator_)
    solver.solve()

    solved = [["5", "3", "4", "6", "7", "8", "9", "1", "2"],
              ["6", "7", "2", "1", "9", "5", "3", "4", "8"],
              ["1", "9", "8", "3", "4", "2", "5", "6", "7"],
              ["8", "5", "9", "7", "6", "1", "4", "2", "3"],
              ["4", "2", "6", "8", "5", "3", "7", "9", "1"],
              ["7", "1", "3", "9", "2", "4", "8", "5", "6"],
              ["9", "6", "1", "5", "3", "7", "2", "8", "4"],
              ["2", "8", "7", "4", "1", "9", "6", "3", "5"],
              ["3", "4", "5", "2", "8", "6", "1", "7", "9"]]

    # assert sudoku == solved
